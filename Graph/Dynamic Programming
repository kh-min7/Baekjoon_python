이미 계산된 결과(작은 문제)는 별도의 메모리 영역에 저장하여 다시 계산하지 않도록 한다.


다이나믹 프로그래밍은 다음의 조건을 만족할 때 사용 할 수 있다.
1. 최적 부분 구조
 - 큰 문제를 작은 문제로 나눌 수 있으며 작은 문제의 답을 모아서 큰 문제를 해결할 수 있다.

2. 중복되는 부분 문제
 - 동일한 작은 문제를 반복적으로 해결한다.


Memoization(하향식, 탑다운)

 한번 계산한 결과를 메모리 공간에 메모하는 기법
- 같은 문제를 다시 호출하면 메모했던 결과를 그대로 가져옴
- 값을 기록해 놓는다는 점에서 캐싱이라고도 부름
- 재귀를 사용

Tabulation(상향식, 보텀업)
- 보통 다이나믹 프로그래밍은 보텀업임
- 반복문을 사용




